{"ast":null,"code":"import axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:5165/api';const api=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Request interceptor to add auth token\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>{return Promise.reject(error);});// Response interceptor to handle auth errors\napi.interceptors.response.use(response=>response,error=>{var _error$response,_error$response2,_error$response3;console.error('API Error:',(_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data);// Handle authentication errors\nif(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===401||((_error$response3=error.response)===null||_error$response3===void 0?void 0:_error$response3.status)===404){// Clear invalid token and user data\nlocalStorage.removeItem('token');localStorage.removeItem('user');// Only redirect if we're not already on the login page\nif(!window.location.pathname.includes('/login')){window.location.reload();// Reload to show login form\n}}return Promise.reject(error);});export const authService={register:async data=>{console.log('Sending registration data:',data);const response=await api.post('/auth/register',data);console.log('Registration response:',response.data);return response.data;},login:async data=>{console.log('Sending login data:',data);const response=await api.post('/auth/login',data);console.log('Login response:',response.data);return response.data;},getCurrentUser:async()=>{try{const response=await api.get('/auth/me');return response.data;}catch(error){var _error$response4;// If user not found, clear token and throw error\nif(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===404){localStorage.removeItem('token');localStorage.removeItem('user');throw new Error('User not found. Please login again.');}throw error;}},logout:()=>{localStorage.removeItem('token');localStorage.removeItem('user');}};export default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response3","console","data","status","removeItem","window","location","pathname","includes","reload","authService","register","log","post","login","getCurrentUser","get","_error$response4","Error","logout"],"sources":["/Users/mac/Desktop/EthioSoft-Marketplace/ethiosoft-client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5165/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data);\n    \n    // Handle authentication errors\n    if (error.response?.status === 401 || error.response?.status === 404) {\n      // Clear invalid token and user data\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      \n      // Only redirect if we're not already on the login page\n      if (!window.location.pathname.includes('/login')) {\n        window.location.reload(); // Reload to show login form\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  register: async (data) => {\n    console.log('Sending registration data:', data);\n    const response = await api.post('/auth/register', data);\n    console.log('Registration response:', response.data);\n    return response.data;\n  },\n\n  login: async (data) => {\n    console.log('Sending login data:', data);\n    const response = await api.post('/auth/login', data);\n    console.log('Login response:', response.data);\n    return response.data;\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      // If user not found, clear token and throw error\n      if (error.response?.status === 404) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        throw new Error('User not found. Please login again.');\n      }\n      throw error;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}