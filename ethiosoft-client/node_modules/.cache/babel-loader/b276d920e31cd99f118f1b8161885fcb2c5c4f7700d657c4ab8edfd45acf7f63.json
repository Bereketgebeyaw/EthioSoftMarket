{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Navigate,useLocation}from'react-router-dom';import{authService}from'../../services/api';import Loading from'../common/Loading.jsx';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,allowedRoles=[]}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState('');const location=useLocation();useEffect(()=>{const checkAuth=async()=>{try{const token=localStorage.getItem('token');if(!token){setLoading(false);return;}const userData=await authService.getCurrentUser();setUser(userData);}catch(error){console.error('Auth check failed:',error);setError(error.message||'Authentication failed');localStorage.removeItem('token');localStorage.removeItem('user');}finally{setLoading(false);}};checkAuth();},[]);if(loading){return/*#__PURE__*/_jsx(Loading,{message:\"Checking authentication...\",className:\"full-page\"});}if(error||!user){return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",state:{from:location},replace:true});}// Check if user has the required role\nif(allowedRoles.length>0&&!allowedRoles.includes(user.role)){// Redirect to appropriate dashboard based on user role\nswitch(user.role){case'Seller':return/*#__PURE__*/_jsx(Navigate,{to:\"/seller\",replace:true});case'Buyer':return/*#__PURE__*/_jsx(Navigate,{to:\"/buyer\",replace:true});case'Admin':return/*#__PURE__*/_jsx(Navigate,{to:\"/admin\",replace:true});default:return/*#__PURE__*/_jsx(Navigate,{to:\"/\",replace:true});}}return children;};export default ProtectedRoute;","map":{"version":3,"names":["React","useState","useEffect","Navigate","useLocation","authService","Loading","jsx","_jsx","ProtectedRoute","_ref","children","allowedRoles","user","setUser","loading","setLoading","error","setError","location","checkAuth","token","localStorage","getItem","userData","getCurrentUser","console","message","removeItem","className","to","state","from","replace","length","includes","role"],"sources":["/Users/mac/Desktop/EthioSoft-Marketplace/ethiosoft-client/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { authService } from '../../services/api';\nimport Loading from '../common/Loading.jsx';\n\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        const userData = await authService.getCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        setError(error.message || 'Authentication failed');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  if (loading) {\n    return <Loading message=\"Checking authentication...\" className=\"full-page\" />;\n  }\n\n  if (error || !user) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Check if user has the required role\n  if (allowedRoles.length > 0 && !allowedRoles.includes(user.role)) {\n    // Redirect to appropriate dashboard based on user role\n    switch (user.role) {\n      case 'Seller':\n        return <Navigate to=\"/seller\" replace />;\n      case 'Buyer':\n        return <Navigate to=\"/buyer\" replace />;\n      case 'Admin':\n        return <Navigate to=\"/admin\" replace />;\n      default:\n        return <Navigate to=\"/\" replace />;\n    }\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute; "],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,WAAW,KAAQ,oBAAoB,CAChD,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5C,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAqC,IAApC,CAAEC,QAAQ,CAAEC,YAAY,CAAG,EAAG,CAAC,CAAAF,IAAA,CACrD,KAAM,CAACG,IAAI,CAAEC,OAAO,CAAC,CAAGb,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACc,OAAO,CAAEC,UAAU,CAAC,CAAGf,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACgB,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAkB,QAAQ,CAAGf,WAAW,CAAC,CAAC,CAE9BF,SAAS,CAAC,IAAM,CACd,KAAM,CAAAkB,SAAS,CAAG,KAAAA,CAAA,GAAY,CAC5B,GAAI,CACF,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAI,CAACF,KAAK,CAAE,CACVL,UAAU,CAAC,KAAK,CAAC,CACjB,OACF,CAEA,KAAM,CAAAQ,QAAQ,CAAG,KAAM,CAAAnB,WAAW,CAACoB,cAAc,CAAC,CAAC,CACnDX,OAAO,CAACU,QAAQ,CAAC,CACnB,CAAE,MAAOP,KAAK,CAAE,CACdS,OAAO,CAACT,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC1CC,QAAQ,CAACD,KAAK,CAACU,OAAO,EAAI,uBAAuB,CAAC,CAClDL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC,CAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,OAAS,CACRZ,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDI,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,GAAIL,OAAO,CAAE,CACX,mBAAOP,IAAA,CAACF,OAAO,EAACqB,OAAO,CAAC,4BAA4B,CAACE,SAAS,CAAC,WAAW,CAAE,CAAC,CAC/E,CAEA,GAAIZ,KAAK,EAAI,CAACJ,IAAI,CAAE,CAClB,mBAAOL,IAAA,CAACL,QAAQ,EAAC2B,EAAE,CAAC,QAAQ,CAACC,KAAK,CAAE,CAAEC,IAAI,CAAEb,QAAS,CAAE,CAACc,OAAO,MAAE,CAAC,CACpE,CAEA;AACA,GAAIrB,YAAY,CAACsB,MAAM,CAAG,CAAC,EAAI,CAACtB,YAAY,CAACuB,QAAQ,CAACtB,IAAI,CAACuB,IAAI,CAAC,CAAE,CAChE;AACA,OAAQvB,IAAI,CAACuB,IAAI,EACf,IAAK,QAAQ,CACX,mBAAO5B,IAAA,CAACL,QAAQ,EAAC2B,EAAE,CAAC,SAAS,CAACG,OAAO,MAAE,CAAC,CAC1C,IAAK,OAAO,CACV,mBAAOzB,IAAA,CAACL,QAAQ,EAAC2B,EAAE,CAAC,QAAQ,CAACG,OAAO,MAAE,CAAC,CACzC,IAAK,OAAO,CACV,mBAAOzB,IAAA,CAACL,QAAQ,EAAC2B,EAAE,CAAC,QAAQ,CAACG,OAAO,MAAE,CAAC,CACzC,QACE,mBAAOzB,IAAA,CAACL,QAAQ,EAAC2B,EAAE,CAAC,GAAG,CAACG,OAAO,MAAE,CAAC,CACtC,CACF,CAEA,MAAO,CAAAtB,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}