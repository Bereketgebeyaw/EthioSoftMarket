{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5164/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(response => response, error => {\n  var _error$response, _error$response2, _error$response3;\n  console.error('API Error:', (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n\n  // Handle authentication errors\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401 || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404) {\n    // Clear invalid token and user data\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Only redirect if we're not already on the login page\n    if (!window.location.pathname.includes('/login')) {\n      window.location.reload(); // Reload to show login form\n    }\n  }\n  return Promise.reject(error);\n});\nexport const authService = {\n  register: async data => {\n    console.log('Sending registration data:', data);\n    const response = await api.post('/auth/register', data);\n    console.log('Registration response:', response.data);\n    return response.data;\n  },\n  login: async data => {\n    console.log('Sending login data:', data);\n    const response = await api.post('/auth/login', data);\n    console.log('Login response:', response.data);\n    return response.data;\n  },\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      var _error$response4;\n      // If user not found, clear token and throw error\n      if (((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 404) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        throw new Error('User not found. Please login again.');\n      }\n      throw error;\n    }\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response3","console","data","status","removeItem","window","location","pathname","includes","reload","authService","register","log","post","login","getCurrentUser","get","_error$response4","Error","logout"],"sources":["/Users/mac/Desktop/EthioSoft-Marketplace/ethiosoft-client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5164/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle auth errors\napi.interceptors.response.use(\n  (response) => response,\n  (error) => {\n    console.error('API Error:', error.response?.data);\n    \n    // Handle authentication errors\n    if (error.response?.status === 401 || error.response?.status === 404) {\n      // Clear invalid token and user data\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      \n      // Only redirect if we're not already on the login page\n      if (!window.location.pathname.includes('/login')) {\n        window.location.reload(); // Reload to show login form\n      }\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport const authService = {\n  register: async (data) => {\n    console.log('Sending registration data:', data);\n    const response = await api.post('/auth/register', data);\n    console.log('Registration response:', response.data);\n    return response.data;\n  },\n\n  login: async (data) => {\n    console.log('Sending login data:', data);\n    const response = await api.post('/auth/login', data);\n    console.log('Login response:', response.data);\n    return response.data;\n  },\n\n  getCurrentUser: async () => {\n    try {\n      const response = await api.get('/auth/me');\n      return response.data;\n    } catch (error) {\n      // If user not found, clear token and throw error\n      if (error.response?.status === 404) {\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n        throw new Error('User not found. Please login again.');\n      }\n      throw error;\n    }\n  },\n\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}