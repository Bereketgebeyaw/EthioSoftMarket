{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/EthioSoft-Marketplace/ethiosoft-client/src/components/auth/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { authService } from '../../services/api';\nimport Loading from '../common/Loading.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  allowedRoles = []\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const location = useLocation();\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n        const userData = await authService.getCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        setError(error.message || 'Authentication failed');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      message: \"Checking authentication...\",\n      className: \"full-page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n  if (error || !user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if user has the required role\n  if (allowedRoles.length > 0 && !allowedRoles.includes(user.role)) {\n    // Redirect to appropriate dashboard based on user role\n    switch (user.role) {\n      case 'Seller':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/seller\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 16\n        }, this);\n      case 'Buyer':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/buyer\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 16\n        }, this);\n      case 'Admin':\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/admin\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\",\n          replace: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this);\n    }\n  }\n  return children;\n};\n_s(ProtectedRoute, \"lyO60unGjFujrF2rpHMK1KGlO24=\", false, function () {\n  return [useLocation];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","useLocation","authService","Loading","jsxDEV","_jsxDEV","ProtectedRoute","children","allowedRoles","_s","user","setUser","loading","setLoading","error","setError","location","checkAuth","token","localStorage","getItem","userData","getCurrentUser","console","message","removeItem","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","length","includes","role","_c","$RefreshReg$"],"sources":["/Users/mac/Desktop/EthioSoft-Marketplace/ethiosoft-client/src/components/auth/ProtectedRoute.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { authService } from '../../services/api';\nimport Loading from '../common/Loading.jsx';\n\nconst ProtectedRoute = ({ children, allowedRoles = [] }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (!token) {\n          setLoading(false);\n          return;\n        }\n\n        const userData = await authService.getCurrentUser();\n        setUser(userData);\n      } catch (error) {\n        console.error('Auth check failed:', error);\n        setError(error.message || 'Authentication failed');\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    checkAuth();\n  }, []);\n\n  if (loading) {\n    return <Loading message=\"Checking authentication...\" className=\"full-page\" />;\n  }\n\n  if (error || !user) {\n    return <Navigate to=\"/login\" state={{ from: location }} replace />;\n  }\n\n  // Check if user has the required role\n  if (allowedRoles.length > 0 && !allowedRoles.includes(user.role)) {\n    // Redirect to appropriate dashboard based on user role\n    switch (user.role) {\n      case 'Seller':\n        return <Navigate to=\"/seller\" replace />;\n      case 'Buyer':\n        return <Navigate to=\"/buyer\" replace />;\n      case 'Admin':\n        return <Navigate to=\"/admin\" replace />;\n      default:\n        return <Navigate to=\"/\" replace />;\n    }\n  }\n\n  return children;\n};\n\nexport default ProtectedRoute; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,WAAW,QAAQ,oBAAoB;AAChD,OAAOC,OAAO,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,YAAY,GAAG;AAAG,CAAC,KAAK;EAAAC,EAAA;EAC1D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgB,KAAK,EAAEC,QAAQ,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMkB,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMkB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVL,UAAU,CAAC,KAAK,CAAC;UACjB;QACF;QAEA,MAAMQ,QAAQ,GAAG,MAAMnB,WAAW,CAACoB,cAAc,CAAC,CAAC;QACnDX,OAAO,CAACU,QAAQ,CAAC;MACnB,CAAC,CAAC,OAAOP,KAAK,EAAE;QACdS,OAAO,CAACT,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;QAC1CC,QAAQ,CAACD,KAAK,CAACU,OAAO,IAAI,uBAAuB,CAAC;QAClDL,YAAY,CAACM,UAAU,CAAC,OAAO,CAAC;QAChCN,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;MACjC,CAAC,SAAS;QACRZ,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIL,OAAO,EAAE;IACX,oBAAOP,OAAA,CAACF,OAAO;MAACqB,OAAO,EAAC,4BAA4B;MAACE,SAAS,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC/E;EAEA,IAAIhB,KAAK,IAAI,CAACJ,IAAI,EAAE;IAClB,oBAAOL,OAAA,CAACL,QAAQ;MAAC+B,EAAE,EAAC,QAAQ;MAACC,KAAK,EAAE;QAAEC,IAAI,EAAEjB;MAAS,CAAE;MAACkB,OAAO;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpE;;EAEA;EACA,IAAItB,YAAY,CAAC2B,MAAM,GAAG,CAAC,IAAI,CAAC3B,YAAY,CAAC4B,QAAQ,CAAC1B,IAAI,CAAC2B,IAAI,CAAC,EAAE;IAChE;IACA,QAAQ3B,IAAI,CAAC2B,IAAI;MACf,KAAK,QAAQ;QACX,oBAAOhC,OAAA,CAACL,QAAQ;UAAC+B,EAAE,EAAC,SAAS;UAACG,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAC1C,KAAK,OAAO;QACV,oBAAOzB,OAAA,CAACL,QAAQ;UAAC+B,EAAE,EAAC,QAAQ;UAACG,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzC,KAAK,OAAO;QACV,oBAAOzB,OAAA,CAACL,QAAQ;UAAC+B,EAAE,EAAC,QAAQ;UAACG,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACzC;QACE,oBAAOzB,OAAA,CAACL,QAAQ;UAAC+B,EAAE,EAAC,GAAG;UAACG,OAAO;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;IACtC;EACF;EAEA,OAAOvB,QAAQ;AACjB,CAAC;AAACE,EAAA,CAtDIH,cAAc;EAAA,QAIDL,WAAW;AAAA;AAAAqC,EAAA,GAJxBhC,cAAc;AAwDpB,eAAeA,cAAc;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}